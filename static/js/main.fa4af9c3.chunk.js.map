{"version":3,"sources":["assets/logo.svg","assets/ellipse.svg","assets/top-right.svg","assets/bottom-left.svg","assets/bottom-right.svg","assets/illustration.svg","services/api.ts","hooks/repositories.tsx","hooks/index.tsx","components/Header/styles.ts","components/Header/index.tsx","components/Sidebar/styles.ts","components/Sidebar/index.tsx","pages/LandingPage/styles.ts","pages/LandingPage/index.tsx","components/Repository/styles.ts","components/Repository/index.tsx","pages/ProjectsPage/styles.ts","pages/ProjectsPage/index.tsx","routes/routes.tsx","styles/global.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","api","axios","create","baseURL","RepositoriesContext","createContext","RepositoriesProvider","children","useState","repositories","setRepositories","loadRepositories","useCallback","a","get","response","data","Provider","value","AppProvider","Container","styled","header","fixed","css","transparent","Logo","div","Navigation","nav","NavigationItem","button","theme","selected","Header","onMenuShown","selectedPage","history","useHistory","headerTransparent","setHeaderTransparent","handleNavigateTo","route","push","handleScroll","window","scrollY","useEffect","document","addEventListener","removeEventListener","src","logo","alt","onClick","size","Content","visible","Pages","Page","Sidebar","onClose","drawerVisible","sidebarVisible","Main","main","Left","section","Title","h2","Description","Button","Right","ellipse","Image","img","TopRight","topRight","BottomLeft","bottomLeft","BottomRight","bottomRight","LandingPage","isSidebarVisible","setIsSidebarVisible","handleOnMenuToggle","oldState","pic","loadingAnimation","keyframes","loading","Repository","repository","href","svn_url","target","rel","owner","avatar_url","login","full_name","description","Repositories","ProjectsPage","context","useContext","Error","useRepositories","length","map","key","Routes","path","component","exact","to","createGlobalStyle","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa4af9c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6483ef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ellipse.f95c1337.svg\";","module.exports = __webpack_public_path__ + \"static/media/top-right.2ef20f48.svg\";","module.exports = __webpack_public_path__ + \"static/media/bottom-left.bab681b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/bottom-right.2e5c5dcc.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration.a51ee464.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/users/guidimas/repos',\n});\n\nexport default api;\n","import React, { useContext, createContext, useState, useCallback } from 'react';\n\nimport api from '../services/api';\nimport IRepository from '../models/IRepository';\n\ninterface RepositoriesContextData {\n  repositories: IRepository[];\n  loadRepositories: () => Promise<void>;\n}\n\nconst RepositoriesContext = createContext<RepositoriesContextData>(\n  {} as RepositoriesContextData,\n);\n\nexport const RepositoriesProvider: React.FC = ({ children }) => {\n  const [repositories, setRepositories] = useState<IRepository[]>([]);\n\n  const loadRepositories = useCallback(async () => {\n    const response = await api.get<IRepository[]>('');\n    setRepositories(response.data);\n  }, []);\n\n  return (\n    <RepositoriesContext.Provider value={{ repositories, loadRepositories }}>\n      {children}\n    </RepositoriesContext.Provider>\n  );\n};\n\nexport function useRepositories(): RepositoriesContextData {\n  const context = useContext(RepositoriesContext);\n\n  if (!context) {\n    throw new Error('useRepositories must be used within RepositoriesProvider');\n  }\n\n  return context;\n}\n","import React from 'react';\nimport { RepositoriesProvider } from './repositories';\n\nconst AppProvider: React.FC = ({ children }) => (\n  <RepositoriesProvider>{children}</RepositoriesProvider>\n);\n\nexport default AppProvider;\n","import styled, { css } from 'styled-components';\n\ninterface IContainerProps {\n  fixed?: boolean;\n  transparent: boolean;\n}\ninterface INavigationItemProps {\n  selected?: boolean;\n  theme: 'light' | 'dark';\n}\n\nexport const Container = styled.header<IContainerProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  transition: background 0.2s linear;\n\n  margin: 0 auto;\n  padding: 1em 2em;\n\n  ${({ fixed }) =>\n    fixed &&\n    css`\n      position: fixed;\n      z-index: 2;\n    `}\n\n  ${({ transparent, fixed }) =>\n    !transparent &&\n    fixed &&\n    css`\n      background: #efefef;\n    `}\n\n  svg {\n    color: #574e65;\n    display: none;\n    cursor: pointer;\n\n    @media (max-width: 640px) {\n      display: block;\n    }\n\n    ${({ transparent, fixed }) =>\n      !transparent &&\n      fixed &&\n      css`\n        display: none !important;\n      `}\n  }\n`;\n\nexport const Logo = styled.div`\n  display: flex;\n  align-items: center;\n\n  h1 {\n    color: #574e65;\n    font-size: 24px;\n    font-weight: 500;\n    margin-left: 0.3em;\n  }\n\n  img {\n    width: 30px;\n    height: 30px;\n    transition: opacity 0.2s linear, transform 0.4s ease-out;\n  }\n\n  &:hover {\n    opacity: 0.8;\n\n    img {\n      transform: rotateX(180deg) rotateY(180deg);\n    }\n  }\n`;\n\nexport const Navigation = styled.nav`\n  display: flex;\n\n  button + button {\n    margin-left: 2em;\n  }\n\n  @media (max-width: 640px) {\n    display: none;\n  }\n`;\n\nexport const NavigationItem = styled.button<INavigationItemProps>`\n  border: 0;\n  background: none;\n  transition: opacity 0.2s linear;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  ${({ theme }) =>\n    theme === 'light'\n      ? css`\n          color: #574e65;\n        `\n      : css`\n          color: white;\n        `}\n\n  ${({ selected }) =>\n    selected &&\n    css`\n      color: #78d0d3;\n    `}\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { FiMenu } from 'react-icons/fi';\nimport { Container, Logo, Navigation, NavigationItem } from './styles';\n\nimport logo from '../../assets/logo.svg';\n\ninterface IHeaderProps {\n  selectedPage: 'LANDING' | 'PROJECTS' | 'MANAGER';\n  theme?: 'light' | 'dark';\n  fixed?: boolean;\n  onMenuShown: () => void;\n}\n\nconst Header: React.FC<IHeaderProps> = ({\n  onMenuShown,\n  theme,\n  fixed,\n  selectedPage,\n}) => {\n  const history = useHistory();\n  const [headerTransparent, setHeaderTransparent] = useState(true);\n\n  const handleNavigateTo = useCallback(\n    (route: string) => {\n      history.push(route);\n    },\n    [history],\n  );\n\n  const handleScroll = useCallback(() => {\n    setHeaderTransparent(window.scrollY <= 0);\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener('scroll', handleScroll);\n    return () => document.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n\n  return (\n    <Container fixed={fixed} transparent={headerTransparent}>\n      <Logo>\n        <img src={logo} alt=\"Dimas Portfolio\" />\n        <h1>Dimas Portfolio</h1>\n      </Logo>\n      <Navigation>\n        <NavigationItem\n          onClick={() => handleNavigateTo('/')}\n          selected={selectedPage === 'LANDING'}\n          theme={theme}\n        >\n          Landing\n        </NavigationItem>\n        <NavigationItem\n          onClick={() => handleNavigateTo('/projects')}\n          selected={selectedPage === 'PROJECTS'}\n          theme={theme}\n        >\n          Projects\n        </NavigationItem>\n        <NavigationItem\n          onClick={() => handleNavigateTo('/manager')}\n          selected={selectedPage === 'MANAGER'}\n          theme={theme}\n        >\n          Manager\n        </NavigationItem>\n      </Navigation>\n      <FiMenu size={24} onClick={onMenuShown} />\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled, { css } from 'styled-components';\n\ninterface IContentProps {\n  visible: boolean;\n}\n\ninterface IPageProps {\n  selected?: boolean;\n}\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  min-height: 100vh;\n  width: 100%;\n  overflow: hidden;\n`;\n\nexport const Content = styled.div<IContentProps>`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background: #f0fafa;\n  position: relative;\n  transition: all 0.3s;\n  flex-shrink: 0;\n\n  @media (min-width: 641px) {\n    display: none;\n  }\n\n  @media (max-width: 640px) {\n    width: 0;\n    ${({ visible }) =>\n      visible\n        ? css`\n            opacity: 1;\n            width: 70%;\n          `\n        : css`\n            opacity: 0;\n            width: 0;\n          `}\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  padding: 22px 2em;\n  height: 32px;\n  width: 100%;\n  justify-content: space-between;\n\n  svg {\n    cursor: pointer;\n  }\n`;\n\nexport const Pages = styled.div`\n  margin-top: 128px;\n  button + button {\n    margin-top: 16px;\n  }\n  @media (max-width: 1270px) {\n    margin-top: 64px;\n  }\n`;\n\nexport const Page = styled.button<IPageProps>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px;\n  background: none;\n  border: 0;\n  padding: 8px 32px;\n  background: linear-gradient(to left, rgba(0, 0, 0, 0.04), transparent);\n  position: relative;\n\n  ${({ selected }) =>\n    selected\n      ? css`\n          border-left: 4px solid #78d0d3;\n        `\n      : ''}\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.04);\n  }\n\n  @media (max-width: 1270px) {\n    font-size: 14px;\n    padding: 8px 16px;\n  }\n`;\n","import React, { useCallback } from 'react';\n\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\n\nimport { Page, Pages, Header, Content, Container } from './styles';\n\ninterface ISidebarProps {\n  visible: boolean;\n  selectedPage: 'LANDING' | 'PROJECTS' | 'MANAGER';\n  onClose: () => void;\n}\n\nconst Sidebar: React.FC<ISidebarProps> = ({\n  visible,\n  children,\n  selectedPage,\n  onClose,\n}) => {\n  const history = useHistory();\n\n  const handleNavigateTo = useCallback(\n    (route: string) => {\n      history.push(route, { drawerVisible: visible });\n    },\n    [history, visible],\n  );\n\n  return (\n    <Container>\n      <Content visible={visible}>\n        <Header>\n          <FiArrowLeft size={24} onClick={onClose} />\n        </Header>\n        <Pages>\n          <Page\n            selected={selectedPage === 'LANDING'}\n            onClick={() => handleNavigateTo('/')}\n          >\n            <span>Landing</span>\n          </Page>\n          <Page\n            selected={selectedPage === 'PROJECTS'}\n            onClick={() => handleNavigateTo('/projects')}\n          >\n            <span>Projects</span>\n          </Page>\n          <Page\n            selected={selectedPage === 'MANAGER'}\n            onClick={() => handleNavigateTo('/manager')}\n          >\n            <span>Manager</span>\n          </Page>\n        </Pages>\n      </Content>\n      {children}\n    </Container>\n  );\n};\n\nexport default Sidebar;\n","import styled, { css } from 'styled-components';\n\nimport ellipse from '../../assets/ellipse.svg';\nimport topRight from '../../assets/top-right.svg';\nimport bottomLeft from '../../assets/bottom-left.svg';\nimport bottomRight from '../../assets/bottom-right.svg';\n\ninterface ISidebarVisible {\n  sidebarVisible?: boolean;\n}\n\nexport const Container = styled.div<ISidebarVisible>`\n  min-height: 100vh;\n  min-width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: filter 0.2s linear;\n\n  ${({ sidebarVisible }) =>\n    sidebarVisible &&\n    css`\n      @media (max-width: 640px) {\n        filter: blur(2px);\n      }\n    `}\n`;\n\nexport const Main = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 1600px;\n  padding: 2em;\n\n  @media (max-width: 640px) {\n    padding: 1em;\n  }\n`;\n\n/* Left */\nexport const Left = styled.section`\n  flex: 1;\n  margin-right: 3em;\n\n  @media (max-width: 960px) {\n    margin-right: 0;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: #574e65;\n  font-weight: 900;\n  font-size: 80px;\n  line-height: 90px;\n  transition: font-size 0.2s linear;\n\n  @media (max-width: 1200px) {\n    font-size: 70px;\n    line-height: 60px;\n  }\n\n  @media (max-width: 640px) {\n    font-size: 60px;\n    line-height: 70px;\n  }\n`;\n\nexport const Description = styled.div`\n  color: #aba6b2;\n  font-weight: 500;\n  font-size: 17px;\n  line-height: 30px;\n  margin-top: 2em;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 30px;\n  letter-spacing: 0.1em;\n\n  border: 0;\n  background: #78d0d3;\n  margin-top: 3em;\n  border-radius: 9px;\n  text-transform: uppercase;\n  padding: 1em 1.5em;\n  box-shadow: 0px 20px 25px -15px rgba(100, 177, 180, 0.8);\n  transition: transform 0.2s linear, box-shadow 0.2s linear;\n\n  &:hover {\n    background: #96d5d7;\n    box-shadow: 0px 20px 25px -18px rgba(100, 177, 180, 0.8);\n    transform: scale(1.05);\n  }\n\n  @media (max-width: 640px) {\n    width: 100%;\n  }\n`;\n\n/* Right */\nexport const Right = styled.section`\n  flex: 1;\n  background: url(${ellipse}) no-repeat center;\n  background-size: 85% 85%;\n  display: flex;\n  justify-content: center;\n  transition: background-size 0.2s ease-in-out;\n\n  @media (max-width: 960px) {\n    display: none;\n  }\n`;\n\nexport const Image = styled.img`\n  height: 625px;\n  transition: height 0.2s linear;\n\n  @media (max-width: 1200px) {\n    height: 525px;\n  }\n\n  @media (max-width: 1100px) {\n    height: 450px;\n  }\n`;\n\n/* Background */\nexport const TopRight = styled.div`\n  height: 100vh;\n  width: 100%;\n  background: url(${topRight}) no-repeat top right;\n  position: absolute;\n  z-index: -1;\n\n  @media (max-width: 640px) {\n    display: none;\n  }\n\n  @media (max-width: 1200px) {\n    background-size: 70%;\n  }\n`;\n\nexport const BottomLeft = styled.div`\n  height: 100vh;\n  min-height: 800px;\n  width: 100%;\n  background: url(${bottomLeft}) no-repeat bottom left;\n  position: absolute;\n  z-index: -1;\n\n  @media (max-width: 640px) {\n    background-size: 60%;\n  }\n`;\n\nexport const BottomRight = styled.div`\n  height: 100vh;\n  min-height: 800px;\n  width: 100%;\n  background: url(${bottomRight}) no-repeat bottom right;\n  position: absolute;\n  z-index: -1;\n\n  @media (max-width: 960px) {\n    display: none;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\n\nimport {\n  Container,\n  Main,\n  Left,\n  Right,\n  Title,\n  Description,\n  Button,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n  Image,\n} from './styles';\n\nimport pic from '../../assets/illustration.svg';\n\nconst LandingPage: React.FC = () => {\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n\n  const handleOnMenuToggle = useCallback(() => {\n    setIsSidebarVisible(oldState => !oldState);\n  }, []);\n\n  return (\n    <Sidebar\n      selectedPage=\"LANDING\"\n      visible={isSidebarVisible}\n      onClose={handleOnMenuToggle}\n    >\n      <Container sidebarVisible={isSidebarVisible}>\n        <TopRight />\n        <BottomLeft />\n        <BottomRight />\n        <Header onMenuShown={handleOnMenuToggle} selectedPage=\"LANDING\" />\n        <Main>\n          <Left>\n            <Title>Freelance Developer</Title>\n            <Description>\n              Ideas are these disembodied life forms, they don't have a form,\n              but they have a will. All they want is to be made manifest. If you\n              can manage to open up your consciousness to an idea of living in a\n              world of abundance, then you can believe that, constantly, ideas\n              are trying to find human collaborators.\n              <br />— Elizabeth Gilbert\n            </Description>\n            <Button>See projects</Button>\n          </Left>\n          <Right>\n            <Image src={pic} alt=\"Developer\" />\n          </Right>\n        </Main>\n      </Container>\n    </Sidebar>\n  );\n};\n\nexport default LandingPage;\n","import styled, { css, keyframes } from 'styled-components';\n\ninterface IContainerProps {\n  loading?: boolean;\n}\n\nconst loadingAnimation = keyframes`\n  from {\n    left: -25%;\n    opacity: 1;\n  }\n\n  to {\n    left: 110%;\n    opacity: 0.5;\n  }\n`;\n\nexport const Container = styled.div<IContainerProps>`\n  width: 100%;\n  ${({ loading }) =>\n    loading &&\n    css`\n      background: rgba(0, 0, 0, 0.05);\n      border-radius: 5px;\n      width: 100%;\n      display: flex;\n      height: 140px;\n      max-height: 140px;\n      position: relative;\n      overflow: hidden;\n\n      &:after {\n        content: '';\n        display: block;\n        width: 150px;\n        height: 250px;\n        background: linear-gradient(to left, rgba(0, 0, 0, 0.03), transparent);\n        position: absolute;\n        transform: rotate(30deg);\n        top: -60px;\n        left: -25%;\n        animation: ${loadingAnimation} 1.5s infinite ease-out;\n      }\n    `}\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n    height: 140px;\n    max-height: 140px;\n\n    & + a {\n      margin-top: 8px;\n    }\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n\n      @media (max-width: 640px) {\n        display: none;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`;\n\nexport const Description = styled.div`\n  margin: 0 16px;\n  flex: 1;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n\n  strong {\n    font-size: 20px;\n    color: #3d3d4d;\n\n    @media (max-width: 640px) {\n      font-size: 16px;\n    }\n  }\n\n  p {\n    font-size: 18px;\n    color: #a8a8b3;\n    margin-top: 4px;\n\n    @media (max-width: 640px) {\n      font-size: 14px;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport IRepository from '../../models/IRepository';\n\nimport { Container, Description } from './styles';\n\ninterface IRepositoryProps {\n  repository?: IRepository;\n}\n\nconst Repository: React.FC<IRepositoryProps> = ({ repository }) => {\n  return repository ? (\n    <Container>\n      <a href={repository.svn_url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n        <Description>\n          <strong>{repository.full_name}</strong>\n          <p>{repository.description}</p>\n        </Description>\n        <FiChevronRight size={20} />\n      </a>\n    </Container>\n  ) : (\n    <Container loading />\n  );\n};\n\nexport default Repository;\n","import styled, { css } from 'styled-components';\n\ninterface ISidebarVisible {\n  sidebarVisible?: boolean;\n}\n\nexport const Container = styled.div<ISidebarVisible>`\n  min-height: 100vh;\n  min-width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: filter 0.2s linear;\n  background: #efefef;\n\n  ${({ sidebarVisible }) =>\n    sidebarVisible &&\n    css`\n      @media (max-width: 640px) {\n        filter: blur(2px);\n      }\n    `}\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 5em;\n  width: 100%;\n  max-width: 700px;\n  padding: 1em;\n\n  > div {\n    margin-bottom: 1.5em;\n  }\n`;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Sidebar from '../../components/Sidebar';\nimport Header from '../../components/Header';\nimport Repository from '../../components/Repository';\n\nimport { useRepositories } from '../../hooks/repositories';\nimport { Container, Repositories } from './styles';\n\nconst ProjectsPage: React.FC = () => {\n  const { loadRepositories, repositories } = useRepositories();\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n\n  useEffect(() => {\n    loadRepositories();\n  }, [loadRepositories]);\n\n  const handleOnMenuToggle = useCallback(() => {\n    setIsSidebarVisible(oldState => !oldState);\n  }, []);\n\n  return (\n    <Sidebar\n      selectedPage=\"PROJECTS\"\n      visible={isSidebarVisible}\n      onClose={handleOnMenuToggle}\n    >\n      <Container>\n        <Header\n          onMenuShown={handleOnMenuToggle}\n          selectedPage=\"PROJECTS\"\n          theme=\"light\"\n          fixed\n        />\n        <Repositories>\n          {repositories.length === 0 ? (\n            <>\n              <Repository />\n              <Repository />\n              <Repository />\n              <Repository />\n            </>\n          ) : (\n            repositories.map(repository => (\n              <Repository key={repository.full_name} repository={repository} />\n            ))\n          )}\n        </Repositories>\n      </Container>\n    </Sidebar>\n  );\n};\n\nexport default ProjectsPage;\n","import React from 'react';\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport LandingPage from '../pages/LandingPage';\nimport ProjectsPage from '../pages/ProjectsPage';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" component={LandingPage} exact />\n    <Route path=\"/projects\" component={ProjectsPage} exact />\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    overflow-y: scroll;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button, textarea, span, strong {\n    font-family: 'Poppins', serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: bold;\n  }\n\n  button {\n    cursor: pointer;\n    outline: 0;\n  }\n\n  ::-moz-selection {\n    background: #78D0D3;\n    color: #FFF;\n  }\n\n  ::selection {\n    background: #78D0D3;\n    color: #FFF;\n  }\n`;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport AppProvider from './hooks';\nimport Routes from './routes/routes';\n\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n  <Router>\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}